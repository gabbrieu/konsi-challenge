version: '3.9'

services:
    app:
        container_name: api
        build:
            context: .
            dockerfile: Dockerfile
            args:
                - PORT=${PORT}
        restart: unless-stopped
        ports:
            - '${PORT}:${PORT}'
        depends_on:
            elasticsearch:
                condition: service_healthy
            rabbitmq:
                condition: service_started
        volumes:
            - .:/app

    rabbitmq:
        image: rabbitmq:management
        container_name: rabbitmq
        ports:
            - '5672:5672'
            - '15672:15672'

    redis:
        image: redis
        container_name: redis
        restart: always
        ports:
            - '6379:6379'
        volumes:
            - cache:/data

    elasticsearch:
        image: elasticsearch:8.11.3
        container_name: elasticsearch
        restart: always
        environment:
            - http.host="0.0.0.0"
            - transport.host="0.0.0.0"
            - discovery.type="single-node"
            - xpack.security.enabled=false
            - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
        volumes:
            - elsData:/usr/share/elasticsearch/data
        ports:
            - '9200:9200'
            - '9300:9300'
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    "curl -s -X GET http://localhost:9200/_cluster/health?pretty | grep status | grep -q '\\(green\\|yellow\\)'",
                ]
            interval: 10s
            timeout: 10s
            retries: 24

    consumer:
        container_name: consumer
        build:
            context: .
            dockerfile: Dockerfile.consumer
        restart: always
        depends_on:
            elasticsearch:
                condition: service_healthy
            rabbitmq:
                condition: service_started
            redis:
                condition: service_started
        volumes:
            - .:/app

volumes:
    cache:
        driver: local
    elsData:
        driver: local
